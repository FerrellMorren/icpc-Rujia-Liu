跟long long相关今天总是错！！！

long long k = i*(i+1)/2是不行的！

因为计算i*(i+1)时，都是int类型！！

这题比我想象的难！(是自己太SB了吧・・・不知道那时候怎么想的，用map干嘛・・)
暴力枚举行不通，于是乎先暴力前9项，看出来了一个规律・・・
（妈的，其实打表是可以的！！用double看是不是平方就可以了・・・没必要维护map！太浪费时间了！）
或者： 可以枚举n，然后二分找m

小学奥数果然有用・・・

presentation error!中间不应该有空格！！

话说其实暴力枚举的程序二分找n不错！！使得n*(n+1) == 2*k*k.
这样不需要维护map・・・

标准的数学解法是佩尔方程！！（有点难吧・・・）
对上式变形，乘以4，变为(2n+1)^2-8*m^2=1。
然后找到基本解2n+1=3和m=1，依据递推公式找到后面的10对m、n打印出来即可

想弄明白pell equation相当复杂啊！！数论课的教材中就有，我们正好没有学到・・・可惜了・・・

P.S. don的解法感觉也不错！

打表法：

题目实际就是给你两个数m、n，使得m、n之间的数之和与1~m之间的数之和相等（不包括m）。
即：1+2+...+m-1 == (m+1)+...+n; 因此我们可以套用求和公式，两边移项化简得：2*pow(m,2) = n*(n+1)。
因此我们可以得到：m = sqrt(n*(n+1)/2)。枚举n的值，从而判断所得到的m值是否为整数，若为整数则说明两边的值实际相等。
得到输出满足条件的最小的十组m、n，注意格式“%10d”，打表输出。

#include<stdio.h>  
#include<math.h>  
int main()  
{  
    freopen("out.txt", "w", stdout);  
    long long _mid;  
    double mid;  
    for(int i=6; i<100000000; i++)  
    {  
        mid = (double)i*(i+1);  
        mid /= 2;  
        mid = sqrt(mid);  
        _mid = mid;// 取mid的整数部分  
        if(fabs(mid-(double)_mid) < 1e-10)//若整数部分与本身相等则说明符合条件  
            printf("printf(\"%%10d%%10d\\n\", %I64d, %d);\n", _mid, i);  
    }  
    return 0;  
}  
打表输出：
[cpp] view plaincopy
#include <stdio.h>  
int main()  
{  
    printf("%10d%10d\n", 6, 8);  
    printf("%10d%10d\n", 35, 49);  
    printf("%10d%10d\n", 204, 288);  
    printf("%10d%10d\n", 1189, 1681);  
    printf("%10d%10d\n", 6930, 9800);  
    printf("%10d%10d\n", 40391, 57121);  
    printf("%10d%10d\n", 235416, 332928);  
    printf("%10d%10d\n", 1372105, 1940449);  
    printf("%10d%10d\n", 7997214, 11309768);  
    printf("%10d%10d\n", 46611179, 65918161);  
    return 0;  
}  